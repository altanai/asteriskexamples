;! Automatically generated configuration file
;! Filename: extensions.conf (/etc/asterisk/extensions.conf)
;! Generator: Manager
;! Creation Date: Mon Mar 23 15:21:13 2020
;!
[from-internal]
   exten = 100,1,Answer()
   same = n,Wait(1)
   same = n,Playback(hello-world)
   same = n,Hangup()

[incoming_calls]
[from-internal]
   exten => 500,1,Verbose(1|Echo test application)
   exten => 500,n,Echo()
   exten => 500,n,Hangup()
   exten => s,1,NoOp(DEFAULTcontext)

   exten => _XXXXXXXXXX,1,NoOp()
   ;   same => n,MixMonitor(${UNIQUEID}.wav,ab)
   ;   same => n,Dial(${trunk_1}/${EXTEN})
   same => n,Stasis(attendant)
   ;  same => n,StopMixMonitor()
   same => n,Hangup()

[phones]
include => from-internal

;PBX setup
[from-outside]
   exten => _XXXXXXXXXX,1,NoOp()
   same => n,Verbose(2,${DATETIME} Call from outside - channel name is ${CHANNEL})
   same => n,MixMonitor(${UNIQUEID}.wav,ab)
   same => n,Dial(${trunk_1}/${EXTEN})
   same => n,Stasis(attendant)
   same => n,StopMixMonitor()
   same => n,Hangup()

[from-internal]
   exten => _XXXXXXXXXX,1,NoOp()
   same => n,Verbose(2,${DATETIME} Call from internal - channel name is ${CHANNEL})
   same => n,MixMonitor(${UNIQUEID}.wav,ab)
   same => n,Dial(${trunk_1}/${EXTEN})
   same => n,Stasis(attendant)
   same => n,StopMixMonitor()
   same => n,Hangup()

   exten => s,1,NoOp(DEFAULT context)

[general]
   static = yes
   writeprotect = no
   clearglobalvars = yes

[globals]
   FEATURES =
   DIALOPTIONS =
   RINGTIME = 20
   FOLLOWMEOPTIONS =
   PAGING_HEADER = Intercom
   trunk_1 = SIP/trunk_1
   CID_6001 = 918043999921
   stasis_app_inbound = app_voicedev

[default]

   exten => s,1,NoOp( DEFAULT context )
   same => n,Verbose(2,${DATETIME} Default Context 1 - channel name is ${CHANNEL})

   exten => _XXXXXXXXXX,1,NoOp()
   same => n,Verbose(2,${DATETIME} Default Context 2 - channel name is ${CHANNEL})
   same => n,Stasis(qwerty)
   same => n,Hangup()

[public]
   exten => service,1,NoOp(Inbound call to: ${EXTEN})
   same => n,Answer(500)
   same => n,Wait(10)
   same => n,Verbose(2,${DATETIME} Loadtest service Public Context - channel name is ${CHANNEL})
   same => n,Playback(demo-instruct)
;     exten => service,6,Set(MONITOR_FILENAME=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${CALLERID(num)})
;     exten => service,7,Verbose(2,${DATETIME} MONITOR_FILENAME ${MONITOR_FILENAME})
;     ; exten => s,n,Playback(beep) ; optional - hear when recording starts
;     exten => service,8,MixMonitor(${MONITOR_FILENAME}.wav,b)
   same => n,Wait(1)
   same => n,Hangup()
   same => n,NoOp(Hangup to: ${CHANNEL})

   exten => 1000,1,NoOp(First Line)
   same  => n,dumpchan()
   same  => n,NoOp(Second Line)
   same  => n,Dial(SIP/1061)
   same  => n,Hangup

   exten => 1060,1,Dial(SIP/1060)
;     exten => 1061,1,Dial(SIP/1061)

;     exten => _.,1,NoOp()
;     same => n,Ringing()
;     same => n,Verbose(2,${DATETIME} Public Context - channel name is ${CHANNEL})
;     same => n,Stasis(${stasis_app_inbound})
;     same => n,Hangup()

[conferences]
[ringgroups]
[queues]
[voicemenus]
[voicemailgroups]
[directory]
[page_an_extension]
[pagegroups]
[asterisk_guitools]
exten = executecommand,1,System(${command})
exten = executecommand,n,Hangup()
exten = record_vmenu,1,Answer
exten = record_vmenu,n,Playback(vm-intro)
exten = record_vmenu,n,Record(${var1},0,500,k)
exten = record_vmenu,n,Playback(vm-saved)
exten = record_vmenu,n,Playback(vm-goodbye)
exten = record_vmenu,n,Hangup
exten = play_file,1,Answer
exten = play_file,n,Playback(${var1})
exten = play_file,n,Hangup

[macro-local-callingrule-cid-0.1]
exten = s,1,Set(CALLERID(all)=${IF($[${LEN(${ARG4})} > 2]?${ARG4}:)})
exten = s,n,Goto(${ARG1},${ARG2},${ARG3})

[macro-trunkdial-failover-0.3]
exten = s,1,GotoIf($[${LEN(${FMCIDNUM})} > 6]?1-fmsetcid,1)
exten = s,n,GotoIf($[${LEN(${GLOBAL_OUTBOUNDCIDNAME})} > 1]?1-setgbobname,1)
exten = s,n,Set(CALLERID(num)=${IF($[${LEN(${CID_${CALLERID(num)}})} > 2]?${CID_${CALLERID(num)}}:)})
exten = s,n,Set(CALLERID(all)=${IF($[${LEN(${ARG5})} > 2]?${ARG5}:)})
exten = s,n,GotoIf($[${LEN(${CALLERID(num)})} > 6]?1-dial,1)
exten = s,n,Set(CALLERID(all)=${IF($[${LEN(${CID_${ARG3}})} > 6]?${CID_${ARG3}}:${GLOBAL_OUTBOUNDCID})})
exten = s,n,Set(CALLERID(all)=${IF($[${LEN(${ARG5})} > 2]?${ARG5}:)})
exten = s,n,Goto(1-dial,1)
exten = 1-setgbobname,1,Set(CALLERID(name)=${GLOBAL_OUTBOUNDCIDNAME})
exten = 1-setgbobname,n,Goto(s,3)
exten = 1-fmsetcid,1,Set(CALLERID(num)=${FMCIDNUM})
exten = 1-fmsetcid,n,Set(CALLERID(name)=${FMCIDNAME})
exten = 1-fmsetcid,n,Goto(s,4)
exten = 1-dial,1,Dial(${ARG1})
exten = 1-dial,n,Gotoif(${LEN(${ARG2})} > 0 ?1-${DIALSTATUS},1:1-out,1)
exten = 1-CHANUNAVAIL,1,Dial(${ARG2})
exten = 1-CHANUNAVAIL,n,Hangup()
exten = 1-CONGESTION,1,Dial(${ARG2})
exten = 1-CONGESTION,n,Hangup()
exten = 1-out,1,Hangup()

[DID_trunk_1]
   include = DID_trunk_1_default

   exten => _.,1,NoOp()
   same => n,Verbose(2,${DATETIME} Inbound DID Call - channel name is ${CHANNEL})
   same => n,Ringing()
   same => n,Stasis(${stasis_app_inbound})
   same => n,Hangup()

[DID_trunk_1_default]
[CallingRule_sbctest]
   exten = _XXXXXXXXXX,1,Macro(trunkdial-failover-0.3,${trunk_1}/${EXTEN:0},,trunk_1,)
   same => n,Verbose(2,${DATETIME} Macro trunkdial failover Call - channel name is ${CHANNEL})

[DLPN_trunk]
   include = CallingRule_sbctest
   include = default
;     include = parkedcalls
;     include = conferences
;     include = ringgroups
;     include = voicemenus
;     include = queues
;     include = voicemailgroups
;     include = directory
;     include = pagegroups
;     include = page_an_extension

[outbound-local]
   exten => _9NXXXXXX,1,Dial(${trunk_1}/${EXTEN:1})
   exten => _9NXXXXXX,n,Congestion()
   exten => _9NXXXXXX,n,Hangup()
   include => from-internal

